@model SitioWebdeSUCARNET.Models.Datos
@{
    ViewBag.Title = "Bolsa de Trabajo en Línea";
}
<h2>Nueva oferta de trabajo</h2>
@using (Html.BeginForm("Ingresardatos", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Ingrese la informacion en los campos siguientes para adicionar una nueva oferta de trabajo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Categoria", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OpcionesCat", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sNombreCategoria, "", new
           {
               @class = "text-danger"
           })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Titulo de la Oferta", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.sTituloOferta, new
           {
               htmlAttributes = new
               {
                   @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.sTituloOferta, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tipo Contrato", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoC", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nTipoContrato, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tipo Jornada", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoJ", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nTipoJornada, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Tipo Localidad", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoL", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nTipoLocalidad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Salario", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fSalario, new
           {
               htmlAttributes = new
               {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.fSalario, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Fecha de Publicación", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dFechaPublicacion, new
                {
                    htmlAttributes = new
                    {
                        @class ="form-control",RegularExpressionAttribute = @"^([0-2][0-9]|3[0-1])(\/|-)(0[1-9]|1[0-2])\2(\d{4})$"
                    }
                })
                @Html.ValidationMessageFor(model => model.dFechaPublicacion, "", new
                {
                    @class = "text-danger"
                })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Empresa", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OpcionesEmp", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.sNombreEmpresa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Fecha de Contratación", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dFechaContratacion, new
                {
                    htmlAttributes = new
                    {
                        @class =
                "form-control",
                        RegularExpressionAttribute = @"^([0-2][0-9]|3[0-1])(\/|-)(0[1-9]|1[0-2])\2(\d{4})$"
                    }
                })

                @Html.ValidationMessageFor(model => model.dFechaContratacion, "", new
                {
                    @class = "text-danger" })

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Numero de Vacantes", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nVacantes, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.nVacantes, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Localidades", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OpcionesLoc", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.nTipoLocalidad, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Descripción", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.sDescripcion, new
                {
                    htmlAttributes = new
                    {
                        @class = "form-control", @cols = 80, @rows = 50 } })

                @Html.ValidationMessageFor(model => model.sDescripcion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" id="btnBuscar" class="btn btn-lg btn-primary "
                        onclick="location.href('@Url.Action("Ingresar","Home")')">
                    Ingresar
                </button>
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Ver Lista de Ofertas", "Index")
</div>